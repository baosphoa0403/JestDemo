npm test --coverage --watchAll=false
npm test ./Test/testAsyncCode.test.js 

api : https://nike0403.herokuapp.com/api-docs/







//  mock function
// test('mock implementation of a basic function ', () => {
//   const mock = jest.fn(() => 'I m a mock function');
//   console.log(mock);
//   expect(mock('calling  my mock  function')).toBe('I m a mock function');
//   expect(mock).toHaveBeenCalledWith('Calling my mock function');
// });

// function forEach(items, callback) {
//   for (let index = 0; index < items.length; index++) {
//     callback(items[index]);
//   }
// }
// test('test mock function callBack ', () => {
//   const mockCallback = jest.fn((x) => 42 + x);
//   forEach([0, 1], mockCallback);
//   // The mock function is called twice
//   console.log(mockCallback.mock);
// //   console.log(mockCallback.mock.calls[1][0]);
//   expect(mockCallback.mock.calls.length).toBe(2);
//   expect(mockCallback.mock.calls[0][0]).toBe(0);
//   expect(mockCallback.mock.calls[1][0]).toBe(1);
//   expect(mockCallback.mock.results[0].value).toBe(42);
// });

// test('test mock return value  of a function  one time ', () => {
//     const myMock = jest.fn();
//     // const a = new myMock();
//     // const b = {};
//     // const bound = myMock.bind(b);
//     // bound();

//     // console.log(myMock.mock.instances);
//     myMock.mockReturnValueOnce(10).mockReturnValueOnce('x').mockReturnValue(true);
//     console.log(myMock(), myMock(), myMock());
//     filterTestFn.mockReturnValueOnce(true).mockReturnValueOnce(false);

//     const result = [11, 12].filter(num => filterTestFn(num));

//     console.log(result);

// })

{
    user: {
        age: 20,
        userType: "user",
        _id: "60bc64d1601d170017c32646",
        name: "khoa",
        email: "khoa1234@gmail.com",
        productsFavorite: []
    },
    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGJjNjRkMTYwMWQxNzAwMTdjMzI2NDYiLCJpYXQiOjE2MjI5NTkzNzUsImV4cCI6MTYyNTYzNzc3NX0.OwwQvgxRJ9f-jHPG95kz8r1MA6c2L1eEp6z0BkSt9qI",
    messager: "login success"
}